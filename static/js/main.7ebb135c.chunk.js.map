{"version":3,"sources":["components/Hooks/useInput.js","components/BasicForm.js","App.js","index.js"],"names":["useInput","validateState","initialState","enteredValue","isTouched","useReducer","state","action","type","value","dispatchState","valueIsValid","hasError","isValid","EnteredValueHandler","event","target","onBlurHandler","BasicForm","trim","firstName","firsNameisValid","valid","firstNameChangeHandler","fisrtNameBlurHandler","lastName","lastNameisValid","lastValid","lastNameChangeHandler","lastNameBlurHandler","includes","email","emailIsValid","emailValid","emailAddChangeHandler","emailAddBlurHandler","classes","emailClass","lastClass","errorText","errorEmailClass","errorLastClass","formIsValid","onSubmit","e","preventDefault","console","log","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"mLAwCeA,EArCE,SAACC,GAChB,IAAMC,EAAe,CACnBC,aAAc,GACdC,WAAW,GAkBb,EAA+BC,sBAhBX,SAACC,EAAOC,GAC1B,MAAoB,WAAhBA,EAAOC,KAEF,CACLL,aAFYI,EAAOE,MAGnBL,UAAWE,EAAMF,WAGD,WAAhBG,EAAOC,KACF,CACLJ,WAAW,EACXD,aAAcG,EAAMH,cAGjBD,IAE8CA,GAAvD,mBAAOI,EAAP,KAAcI,EAAd,KAIMC,EAAeV,EAAcK,EAAMH,cACnCS,GAAYD,GAAgBL,EAAMF,UAGxC,MAAO,CACLK,MAHYH,EAAMH,aAIlBU,QAASF,EACTC,WACAE,oBAX0B,SAACC,GAAD,OAAWL,EAAc,CAAEF,KAAM,SAAUC,MAAOM,EAAMC,OAAOP,SAYzFQ,cAXoB,kBAAMP,EAAc,CAAEF,KAAM,c,OC4ErCU,EAjGG,WAChB,MAMIlB,GAAS,SAACS,GAAD,MAA4B,KAAjBA,EAAMU,UALrBC,EADT,EACEX,MACSY,EAFX,EAEER,QACUS,EAHZ,EAGEV,SACqBW,EAJvB,EAIET,oBACeU,EALjB,EAKEP,cAaF,EAMIjB,GAAS,SAACS,GAAD,MAA4B,KAAjBA,EAAMU,UALrBM,EADT,EACEhB,MACSiB,EAFX,EAEEb,QACUc,EAHZ,EAGEf,SACqBgB,EAJvB,EAIEd,oBACee,EALjB,EAKEZ,cAGF,EAMIjB,GAAS,SAACS,GAAD,MAA4B,KAAjBA,EAAMU,QAAiBV,EAAMqB,SAAS,QALrDC,EADT,EACEtB,MACSuB,EAFX,EAEEnB,QACUoB,EAHZ,EAGErB,SACqBsB,EAJvB,EAIEpB,oBACcqB,EALhB,EAKElB,cAGImB,EAAUd,EAAQ,uBAAyB,eAC3Ce,EAAaJ,EAAa,uBAAyB,eACnDK,EAAYX,EAAY,uBAAyB,eAEjDY,EAAYjB,EAAQ,aAAe,GACnCkB,EAAkBP,EAAa,aAAe,GAC9CQ,EAAiBd,EAAY,aAAe,GAE9Ce,GAAc,EAIlB,OAHIrB,GAAmBK,GAAmBM,IACxCU,GAAc,GAGd,uBAAMC,SArCkB,SAACC,GACzBA,EAAEC,iBACGxB,GAGLyB,QAAQC,IAAI,UAgCZ,UACE,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAWZ,EAAhB,UACE,uBAAOa,QAAQ,OAAOD,UAAWT,EAAjC,wBAGA,uBACE/B,KAAK,OACL0C,GAAG,OACHD,QAAQ,aACRE,SAAU5B,EACVd,MAAOW,EACPgC,OAAQ5B,OAGZ,sBAAKwB,UAAWV,EAAhB,UACE,uBAAOW,QAAQ,OAAOD,UAAWP,EAAjC,uBAGA,uBACEjC,KAAK,OACL0C,GAAG,OACHD,QAAQ,YACRE,SAAUvB,EACVnB,MAAOgB,EACP2B,OAAQvB,UAId,sBAAKmB,UAAWX,EAAhB,UACE,uBAAOY,QAAQ,OAAOD,UAAWR,EAAjC,4BAGA,uBACEhC,KAAK,OACL0C,GAAG,OACHD,QAAQ,QACRE,SAAUjB,EACVzB,MAAOsB,EACPqB,OAAQjB,OAGZ,qBAAKa,UAAU,eAAf,SACE,wBAAQK,UAAWX,EAAnB,0BCtFOY,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCANO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.7ebb135c.chunk.js","sourcesContent":["// import { useState } from 'react'\r\nimport { useReducer } from 'react'\r\n\r\nconst useInput = (validateState) => {\r\n  const initialState = {\r\n    enteredValue: '',\r\n    isTouched: false,\r\n  }\r\n  const reduceState = (state, action) => {\r\n    if (action.type === 'CHANGE') {\r\n      const value = action.value\r\n      return {\r\n        enteredValue: value,\r\n        isTouched: state.isTouched,\r\n      }\r\n    }\r\n    if (action.type === 'ONBLUR') {\r\n      return {\r\n        isTouched: true,\r\n        enteredValue: state.enteredValue,\r\n      }\r\n    }\r\n    return initialState\r\n  }\r\n  const [state, dispatchState] = useReducer(reduceState, initialState)\r\n  const EnteredValueHandler = (event) => dispatchState({ type: 'CHANGE', value: event.target.value })\r\n  const onBlurHandler = () => dispatchState({ type: 'ONBLUR' })\r\n\r\n  const valueIsValid = validateState(state.enteredValue) // true || false\r\n  const hasError = !valueIsValid && state.isTouched\r\n  const value = state.enteredValue\r\n\r\n  return {\r\n    value: value,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    EnteredValueHandler,\r\n    onBlurHandler,\r\n  }\r\n}\r\nexport default useInput\r\n","// проверка с помощью onBlur\n\n// import { useState } from 'react'\nimport useInput from './Hooks/useInput'\n\nconst BasicForm = () => {\n  const {\n    value: firstName,\n    isValid: firsNameisValid,\n    hasError: valid,\n    EnteredValueHandler: firstNameChangeHandler,\n    onBlurHandler: fisrtNameBlurHandler,\n  } = useInput((value) => value.trim() !== '')\n\n \n\n  const formSubmitHandler = (e) => {\n    e.preventDefault()\n    if (!firsNameisValid) {\n      return\n    }\n    console.log('Hello');\n  }\n\n  const {\n    value: lastName,\n    isValid: lastNameisValid,\n    hasError: lastValid,\n    EnteredValueHandler: lastNameChangeHandler,\n    onBlurHandler: lastNameBlurHandler ,\n  } = useInput((value) => value.trim() !== '')\n\n  const {\n    value: email,\n    isValid: emailIsValid,\n    hasError: emailValid,\n    EnteredValueHandler: emailAddChangeHandler,\n    onBlurHandler:emailAddBlurHandler ,\n  } = useInput((value) => value.trim() !== '' && value.includes('@'))\n\n  const classes = valid ? 'form-control invalid' : 'form-control'\n  const emailClass = emailValid ? 'form-control invalid' : 'form-control'\n  const lastClass = lastValid ? 'form-control invalid' : 'form-control'\n\n  const errorText = valid ? 'error-text' : ''\n  const errorEmailClass = emailValid ? 'error-text' : ''\n  const errorLastClass = lastValid ? 'error-text' : ''\n\n  let formIsValid = false\n  if (firsNameisValid && lastNameisValid && emailIsValid  ) {\n    formIsValid = true\n  }\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={classes}>\n          <label htmlFor=\"name\" className={errorText}>\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            htmlFor=\"first name\"\n            onChange={firstNameChangeHandler}\n            value={firstName}\n            onBlur={fisrtNameBlurHandler}\n          />\n        </div>\n        <div className={lastClass}>\n          <label htmlFor=\"name\" className={errorLastClass}>\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            htmlFor=\"last name\"\n            onChange={lastNameChangeHandler}\n            value={lastName}\n            onBlur={lastNameBlurHandler}\n          />\n        </div>\n      </div>\n      <div className={emailClass}>\n        <label htmlFor=\"name\" className={errorEmailClass}>\n          E-Mail Address\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          htmlFor=\"email\"\n          onChange={emailAddChangeHandler}\n          value={email}\n          onBlur={emailAddBlurHandler}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  )\n}\n\nexport default BasicForm\n","import BasicForm from \"./components/BasicForm\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}